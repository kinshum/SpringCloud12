<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.de</groupId>
    <artifactId>face-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>face-web</artifactId>
  
  <dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>android-json</artifactId>
					<groupId>com.vaadin.external.google</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<package.env>local</package.env>
				<!-- <docker.build.host>172.16.10.72:5000</docker.build.host>
				<docker.image.prefix>52cx/local</docker.image.prefix> -->
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<package.env>dev</package.env>
				<!-- <docker.build.host>172.16.10.72:5000</docker.build.host>
				<docker.image.prefix>52cx/dev</docker.image.prefix> -->
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		
		
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
		<!-- 	<plugin>
			    <groupId>com.spotify</groupId>
			    <artifactId>docker-maven-plugin</artifactId>
				<executions>
					自动构建镜像
					<execution>s
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageName>${docker.build.host}/${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					构建时覆盖以有映像的标签
					<forceTags>true</forceTags>
					自动push到无认证的私有仓库
					<pushImage>true</pushImage>
					<serverId>docker-registry</serverId>
				</configuration>
			</plugin> -->
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources/${package.env}</directory>
				<includes>
					<include>bootstrap.yml</include>
					<include>logback.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>
  
</project>