package com.de.base.qunen;import com.de.JsonConvertUtils;import com.de.base.entity.SysTemp;import com.de.base.mapper.SysOperationLogMapper;import com.de.base.mapper.SysTempMapper;import com.de.repository.EntityRepository;import com.fasterxml.jackson.core.type.TypeReference;import org.elasticsearch.action.bulk.BulkRequestBuilder;import org.elasticsearch.client.transport.TransportClient;import org.elasticsearch.common.settings.Settings;import org.elasticsearch.common.transport.InetSocketTransportAddress;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.kafka.annotation.KafkaListener;import org.springframework.stereotype.Component;import java.lang.reflect.InvocationTargetException;import java.net.InetAddress;import java.net.UnknownHostException;import java.util.List;import java.util.Map;/** * * @author jensen * @description  消息消费者 * @date 2018/5/3 5:31 * @param * @return */@Componentpublic class MsgConsumer {    @Autowired    private SysOperationLogMapper sysOperationLogMapper;    @Autowired    private SysTempMapper sysTempMapper;    @Autowired    EntityRepository entityRepository;    @KafkaListener(topics = {"sysTemp"})    public void processMessage(String msgStr) throws UnknownHostException, InvocationTargetException, IllegalAccessException {        List<SysTemp> sysTemps = JsonConvertUtils.toObject(msgStr, new TypeReference<List<SysTemp>>() {        });        Settings settings = Settings.settingsBuilder().put("cluster.name", "elasticsearch").build();        TransportClient client = TransportClient.builder().settings(settings).build();        client.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName("127.0.0.1"), 9300));        BulkRequestBuilder bulkRequest = client.prepareBulk();        for (int i = 0; i < sysTemps.size(); i++) {            String str = JsonConvertUtils.toJson(sysTemps.get(i));            Map<String,Object> data = JsonConvertUtils.toObject(str, Map.class);            bulkRequest.add(client.prepareIndex("sys_temp","sttype").setSource(data));        }        bulkRequest.execute().actionGet();    }}