package com.de.base.services;import java.util.List;import java.util.Map;import com.de.JsonConvertUtils;import com.de.base.entity.SysTemp;import com.de.base.mapper.SysTempMapper;import com.de.base.qunen.MsgProducer;import com.de.entity.Entity;import com.de.base.entity.SysOperationLog;import com.de.base.mapper.SysOperationLogMapper;import com.de.kafka.entity.Message;import com.de.service.CityESService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.stereotype.Service;import com.de.base.mapper.SysDictMapper;import com.github.pagehelper.Page;import com.github.pagehelper.PageHelper;@Servicepublic class SysDictService {	@Autowired	private SysDictMapper sysDictMapper;	@Autowired	private SysOperationLogMapper sysOperationLogMapper;	@Autowired	private RedisTemplate redisTemplate;	@Autowired	private CityESService cityESService;	@Autowired	private MsgProducer msgProducer;	@Autowired	private SysTempMapper sysTempMapper;	public List<SysOperationLog> getSystemDictList(Map<String, String> map) {		// TODO Auto-generated method stub		String pageNum = map.get("pageNum");		String pageSize = map.get("pageSize");		Page<SysOperationLog> pageInfo = PageHelper.startPage(Integer.valueOf(pageNum), Integer.valueOf(pageSize));		List<SysOperationLog> cache = (List<SysOperationLog>) redisTemplate.opsForValue().get(pageNum+pageSize);		if(cache == null) {			cache = sysOperationLogMapper.selectAll();			redisTemplate.opsForValue().set(pageNum + pageSize, cache);		}		return cache;	}	public void addEntity(Entity entity) {		cityESService.saveEntity(entity);	}	public List<Entity> getListByEsSerch(String  contentText) {		//分页查询第一页十五条数据      List<Entity> entities = cityESService.searchEntity(-1,0,contentText);      return entities;	}	/**	 *	 * @author jensen	 * @description 消息队列	 * @date 2018/5/3 22:56	 * @param []	 * @return void	 */	public void KafkaTestSendMessage() {		//发送消息		List<SysTemp> sysTemps = sysTempMapper.selectAll();		String toJson = JsonConvertUtils.toJson(sysTemps);		msgProducer.sendMessage(toJson);	}}